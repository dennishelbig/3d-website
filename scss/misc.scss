html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,address,big,cite,code,del,dfn,em,img,ins,kbd,q,s,samp,small,strike,strong,sub,sup,tt,var,b,u,i,center,dl,dt,dd,ol,ul,li,fieldset,form,label,legend,table,caption,tbody,tfoot,thead,tr,th,td,article,aside,canvas,details,embed,figure,figcaption,footer,header,hgroup,menu,nav,output,ruby,section,summary,time,mark,audio,video{margin:0;padding:0;border:0;font-size:100%;font:inherit;vertical-align:baseline}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}body{line-height:1}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:before,blockquote:after,q:before,q:after{content:'';content:none}table{border-collapse:collapse;border-spacing:0}

// #viewPortSize{
// 	display: table!important;
// }

// @font-face {
// 	font-family: 'Sweet';
// 	src: url('fonts/SweetSansPro-Medium.eot?#iefix') format('embedded-opentype'),  
// 		url('fonts/SweetSansPro-Medium.otf')  format('opentype'),
// 		url('fonts/SweetSansPro-Medium.woff') format('woff'), 
// 		url('fonts/SweetSansPro-Medium.ttf')  format('truetype'),
// 		url('fonts/SweetSansPro-Medium.svg#SweetSansPro-Medium') format('svg');
// 	font-weight: normal;
// 	font-style: normal;
// 	font-display: swap;
// }

@mixin translate($x, $y:0) {
  -webkit-transform: translate($x, $y);
	 -moz-transform: translate($x, $y);
	  -ms-transform: translate($x, $y);
	   -o-transform: translate($x, $y);
		  transform: translate($x, $y);
}


@mixin scale($deg) {
  -webkit-transform: scale($deg);
	 -moz-transform: scale($deg);
	  -ms-transform: scale($deg);
	   -o-transform: scale($deg);
		  transform: scale($deg);
}

@mixin rotate($deg) {
  -webkit-transform: rotate($deg);
	 -moz-transform: rotate($deg);
	  -ms-transform: rotate($deg);
	   -o-transform: rotate($deg);
		  transform: rotate($deg);
}

@mixin translate-rotate($x, $y: 0, $deg: 0 ) {
  -webkit-transform: translate($x, $y) rotate($deg);
	 -moz-transform: translate($x, $y) rotate($deg);
	  -ms-transform: translate($x, $y) rotate($deg);
	   -o-transform: translate($x, $y) rotate($deg);
		  transform: translate($x, $y) rotate($deg);
}


@mixin origin($x, $y:0, $z:0){
	-webkit-transform-origin: $x $y $z;
	 -moz-transform-origin: $x $y $z;
	  -ms-transform-origin: $x $y $z;
	   -o-transform-origin: $x $y $z;
		  transform-origin: $x $y $z;
}

@mixin transition($args) {
  -webkit-transition: $args;
  -moz-transition: $args;
  -ms-transition: $args;
  -o-transition: $args;
  transition: $args;
}

@mixin delay($args) {
  -webkit-transition-delay: $args;
  -moz-transition-delay: $args;
  -ms-transition-delay: $args;
  -o-transition-delay: $args;
  transition-delay: $args;
}

@mixin cover(){
	-webkit-background-size: cover;
	-moz-background-size: cover;
	-o-background-size: cover;
	background-size: cover;
}

@mixin info-box(){
	#info-box{
		padding: 5px 15px;
		font-family: arial;
		z-index: 100;
		position: fixed;
		background: red;
		top: 0;
		left: 0;
		min-width: 50px;
		min-height: 30px;
		background: red;
		color: white;
	}
}


